<?php

/**
 * @file
 * Installation file for ding_place2book module.
 */

/**
 * Implements hook_schema().
 */
function ding_place2book_schema() {
  return array(
    'ding_place2book' => array(
      'description' => 'Table to hold information about Place2Book tickets.',
      'fields' => array(
        'nid' => array(
          'description' => 'The foreign key to {node}.nid',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'place2book_id' => array(
          'description' => 'An ID-reference to the corresponding event on the ticket booking service',
          'type' => 'int',
          'unsigned' => FALSE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'capacity' => array(
          'description' => 'The maximum capacity on the Place2Book event. 0 is interpreted as unlimited capacity on the event (default)',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'maintain_copy' => array(
          'description' => 'Event is created and updated on Place2Book',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 1,
        ),
        'kultunaut_export' => array(
          'description' => 'Place2Book forwards the event to kultunaut',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'passive' => array(
          'description' => 'Event on Place2Book is flagged as passive',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('nid'),
    ),
  );
}


/**
 * Implements hook_enable().
 */
function ding_place2book_enable() {
  // Create a field on the Event nodetype as a placeholder
  // for the order-button/info-area.
  // Check if our field is not already created.
  if (!field_info_field('field_place2book_tickets')) {
    $field = array(
      'field_name' => 'field_place2book_tickets',
      'type' => 'text',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_place2book_tickets',
      'entity_type' => 'node',
      'label' => 'Place2book Tickets',
      'bundle' => 'ding_event',
      'required' => TRUE,
      'default_value' => array(array('value' => '')),
      'description' => 'Placeholder for Place2book ticket information and/or order link',
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'settings' => array(),
          'weight' => 10,
        ),
      ),
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_disable().
 */
function ding_place2book_disable() {
  field_delete_field('field_place2book_tickets');
  field_purge_batch(10);
}

/**
 * Implements hook_install().
 */
function ding_place2book_install() {
  // @todo - Is this viable?
  // Update module weight to make it heavier than CCK field groups.
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'ding_place2book';");
}

/**
 * Implements hook_uninstall().
 */
function ding_place2book_uninstall() {
  variable_del('ding_place2book');
  variable_del('ding_place2book_libraries');
  variable_del('ding_place2book_event_nodes');
}